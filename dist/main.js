figma.showUI(__html__,{height:460,width:340});function m(r){return r.replace(/,/g," ").replace(/(L|M|Z)/g," $1 ").trim().split("Z").map(t=>t.trim()).filter(Boolean).map(t=>t.trim())}function d(r){return r.replace(/,/g," ").replace(/(L|M|Z)/g," $1 ").trim().split("Z").map(t=>t.trim()).filter(Boolean).map(t=>(t+" Z").trim())}const i=figma.createFrame();i.name="Globe";i.resize(300,300);figma.currentPage.appendChild(i);figma.viewport.scrollAndZoomIntoView([i]);async function g(r,n,t=1){let e=(await figma.getLocalPaintStylesAsync()).find(s=>s.name===r);if(e)return e;const a=figma.createPaintStyle();return a.name=r,a.paints=[{color:figma.util.rgb(n),opacity:t,type:"SOLID"}],a}async function p(r){const n=await g("graticule-stroke","rgb(200, 200, 200)"),t=figma.createVector();return t.vectorPaths=m(r).map(o=>({windingRule:"EVENODD",data:o})),await t.setStrokeStyleIdAsync(n.id),t.strokeWeight=.5,t.strokeAlign="OUTSIDE",t.constraints={horizontal:"SCALE",vertical:"SCALE"},t.name="Graticule",t}async function u(r,n){const t=await g("country-fill","rgb(13, 153, 255)"),o=await g("country-stroke","rgb(255, 255, 255)"),e=figma.createVector();return e.vectorPaths=d(r).map(a=>({windingRule:"EVENODD",data:a})),await e.setStrokeStyleIdAsync(o.id),e.strokeWeight=.5,e.strokeAlign="OUTSIDE",await e.setFillStyleIdAsync(t.id),e.constraints={horizontal:"SCALE",vertical:"SCALE"},e.setPluginData("globe-id",n),e.name=n,e}figma.ui.onmessage=async r=>{switch(r.type){case"CREATE":{const n=r.features,t=r.graticules;i.children.forEach(a=>{a.remove()});const o=figma.createEllipse();if(o.resize(300,300),o.strokes=[],o.fills=[{color:figma.util.rgb("rgb(245, 245, 245)"),type:"SOLID"}],o.constraints={horizontal:"SCALE",vertical:"SCALE"},i.appendChild(o),t){const a=[];for(const c of t){const l=await p(c);i.appendChild(l),a.push(l)}const s=figma.group(a,i);s.name="Graticule",s.expanded=!1}for(const a of n)if(Array.isArray(a.d)){const s=[];for(let l of a.d){const f=await u(l,a.name);s.push(f)}const c=figma.group(s,i);c.expanded=!1,c.name=a.name}else{const s=await u(a.d,a.name);i.appendChild(s)}const e=figma.createEllipse();e.resize(300,300),e.strokes=[{color:figma.util.rgb("rgb(100, 100, 100)"),type:"SOLID"}],e.fills=[],e.constraints={horizontal:"SCALE",vertical:"SCALE"},i.appendChild(e),i.setPluginData("rendered","true")}}};
